version: '3'

services:
  nginx:
    image: nginx
    tty: true
    restart: always
    ports:
      - "127.0.0.1:8085:8080"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    restart: always
    tty: true
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  database_mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_mysql:/var/lib/mysql
      - ./sql/mysql:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-asd_123}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE:-data}"
      - "MYSQL_USER=${MYSQL_USER:-data}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD:-asd_123}"
    ports:
      - "127.0.0.1:33082:3306"
    networks:
      - app-network
  database_dump:
    build:
      context: ./docker/database_dump
      dockerfile: Dockerfile
    restart: always
    tty: true
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-asd_123}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE:-data}"
      - "MYSQL_USER=${MYSQL_USER:-data}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD:-asd_123}"
    volumes:
      - ./sql:/sql
    networks:
      - app-network
  
networks:
  app-network:
    driver: bridge

volumes:
  db_mysql:
    driver: local